{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","../node_modules/@material-ui/icons/Delete.js","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-selectors.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","views/ContactsView/ContactsView.jsx"],"names":["module","exports","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","getContacts","state","contacts","items","getFilter","filter","getSelectedContacts","createSelector","contact","name","toLowerCase","includes","IconButton","props","ref","_props$edge","edge","children","classes","className","_props$color","color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","label","withStyles","theme","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","display","alignItems","justifyContent","ContactListItem","dispatch","useDispatch","css","contactItem","number","type","onClick","id","deleteContact","ContactList","useSelector","selectedContacts","contactsData","contactList","map","Filter","htmlFor","TextField","filterInput","onChange","e","filterName","target","filterContacts","ContactForm","onSubmit","preventDefault","elements","find","toast","error","addContact","contactForm","variant","formInput","pattern","title","required","addContactBtn","Button","ContactsView","useEffect","fetchContacts"],"mappings":"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","file":"static/js/ContactsPage.6ccee70a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__2eB77\",\"number\":\"ContactListItem_number__2nW8b\",\"contactItem\":\"ContactListItem_contactItem__USuMM\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactBtn\":\"ContactForm_addContactBtn__AB9b4\",\"contactForm\":\"ContactForm_contactForm__3x3Q2\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getSelectedContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  },\n);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import PropTypes from 'prop-types';\r\nimport css from './ContactListItem.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { useDispatch } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst ContactListItem = ({ contact}) => {\r\n  \r\nconst dispatch = useDispatch();\r\nconst deleteItem = (id) => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\nreturn (\r\n    <li className={css.contactItem}>\r\n        <span className={css.name}>{contact.name}</span>\r\n        <span className={css.number}>{contact.number}</span>\r\n        <IconButton aria-label=\"delete\" type=\"button\" onClick={() => deleteItem(contact.id)}><DeleteIcon /></IconButton>\r\n    </li>);\r\n}\r\n    \r\nContactListItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import css from './ContactList.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilter, getContacts, getSelectedContacts } from '../../redux/contacts/contacts-selectors';\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = () => {\r\n    const filter = useSelector(getFilter);\r\n    const contacts = useSelector(getContacts);\r\n    const selectedContacts = useSelector(getSelectedContacts);\r\n    const contactsData = filter ? selectedContacts : contacts;\r\n  return (\r\n      <ul className={css.contactList}>\r\n        {contactsData.map(contact =>\r\n          <ContactListItem contact={contact} key={contact.id}/>)}\r\n      </ul>);\r\n}\r\n\r\nexport default ContactList;","import css from './Filter.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/contacts/contacts-slice';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const handleFilter = e => {\r\n    const filterName = e.target.value.toLowerCase();\r\n    dispatch(filterContacts(filterName));\r\n  };\r\n\r\n    return (\r\n        <div className={css.filter}>\r\n            <label htmlFor=\"filter\">Find contacts by name</label>\r\n        <TextField\r\n          label=\"Search field\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id=\"filter\"\r\n          className={css.filterInput} onChange={handleFilter} />\r\n        </div>);\r\n};\r\n\r\nexport default Filter;","import css from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport toast from 'react-hot-toast';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const name = e.target.elements.name.value;\r\n    const number = e.target.elements.number.value;\r\n    const existingContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (existingContact) {\r\n      return toast.error(`${name} is already in contacts!!!`);\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n\r\n    e.target.elements.name.value = '';\r\n    e.target.elements.number.value = '';\r\n  };\r\n\r\n  return <form onSubmit={onSubmit} className={css.contactForm}>\r\n    <label htmlFor=\"name\"></label>\r\n    <TextField\r\n      label=\"Name\"\r\n      variant=\"outlined\"\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      className={css.formInput}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n      />\r\n    <label htmlFor=\"number\"></label>\r\n    <TextField\r\n      label=\"Phone number\"\r\n      variant=\"outlined\"\r\n     type=\"tel\"\r\n     name=\"number\"\r\n     id=\"number\"\r\n     className={css.formInput}\r\n     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n     required\r\n    />\r\n\r\n     <div className={css.addContactBtn}>\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">Add contact</Button>\r\n     </div>\r\n    </form>\r\n}\r\n\r\nexport default ContactForm;","import css from './ContactsView.module.css';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\n\r\nconst ContactsView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n    \r\n    return (\r\n        <>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm/>\r\n\r\n            <h2 className={css.title}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList/> \r\n            <Toaster />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ContactsView;"],"sourceRoot":""}