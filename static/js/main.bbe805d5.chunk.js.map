{"version":3,"sources":["components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/SingIUpForm/SingUpForm.module.css","components/LoginForm/LoginForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","views/HomeView/HomeView.module.css","components/AuthBar/AuthBar.module.css","App.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-slice.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/store/store.js","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.jsx","components/AuthBar/AuthBar.jsx","views/HomeView/HomeView.jsx","components/SingIUpForm/SingUpForm.jsx","views/SignUpView/SignUpView.jsx","components/LoginForm/LoginForm.jsx","views/LoginView/LoginView.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","views/ContactsView/ContactsView.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","fetchContacts","createAsyncThunk","a","axios","get","result","data","toast","error","addContact","contact","post","deleteContact","id","delete","ItemsSlice","createSlice","name","initialState","items","number","filter","status","reducers","filterContacts","state","action","payload","extraReducers","fulfilled","pending","_","rejected","push","actions","defaults","baseURL","token","headers","common","Authorization","register","credentials","logIn","authOperations","logOut","authSlice","user","email","isLoggedIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","AuthNav","to","exact","className","css","link","activeClassName","activeLink","Navigation","AppBar","header","HomeView","container","title","role","SignUpForm","dispatch","useDispatch","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","form","autoComplete","label","type","onChange","SignUpView","LoginView","ContactListItem","contactItem","onClick","ContactList","contactList","map","Filter","htmlFor","filterInput","filterName","toLowerCase","getContacts","getFilter","getSelectedContacts","createSelector","includes","ContactForm","useSelector","elements","find","contactForm","formInput","pattern","required","ContactsView","console","log","selectedContacts","App","useEffect","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B,wCCA1DD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,2B,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,mBCAhED,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,wCCAlED,EAAOC,QAAU,CAAC,OAAS,0B,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,yB,2OCGjBC,EAAgBC,YAC3B,yBAD2C,sBAE3C,4BAAAC,EAAA,+EAEyBC,IAAMC,IACzB,+DAHN,cAEUC,EAFV,yBAKWA,EAAOC,MALlB,gCAOIC,IAAMC,MAAM,wBAPhB,0DAYWC,EAAaR,YACxB,sBADwC,uCAExC,WAAMS,GAAN,eAAAR,EAAA,+EAEyBC,IAAMQ,KACzB,8DACAD,GAJN,cAEUL,EAFV,yBAMWA,EAAOC,MANlB,gCAQIC,IAAMC,MAAM,wBARhB,yDAFwC,uDAe7BI,EAAgBX,YAC3B,yBAD2C,uCAE3C,WAAMY,GAAN,SAAAX,EAAA,+EAEUC,IAAMW,OAAN,sEAC2DD,IAHrE,gCAKWA,GALX,gCAOIN,IAAMC,MAAM,wBAPhB,wDAF2C,uDC1BvCO,EAAaC,YAAY,CAC7BC,KAAM,WACNC,aAAc,CACZC,MAAO,CACL,CACEF,KAAM,YACNG,OAAQ,aACRP,GAAI,OAGRQ,OAAQ,GACRC,OAAQ,KACRd,MAAO,MAGTe,SAAU,CACRC,eAAgB,SAACC,EAAOC,GACtBD,EAAMJ,OAASK,EAAOC,UAI1BC,eAAa,mBACV5B,EAAc6B,WAAY,SAACJ,EAAOC,GACjCD,EAAMN,MAAQO,EAAOC,QACrBF,EAAMH,OAAS,KACfG,EAAMjB,MAAQ,QAJL,cAMVR,EAAc8B,SAAU,SAACL,EAAOM,GAC/BN,EAAMH,OAAS,aAPN,cASVtB,EAAcgC,UAAW,SAACP,EAAOM,GAChCN,EAAMH,OAAS,KACfG,EAAMjB,MAAQ,WAXL,cAcVC,EAAWoB,WAAY,SAACJ,EAAOC,GAC9BD,EAAMN,MAAMc,KAAKP,EAAOC,SACxBF,EAAMH,OAAS,KACfG,EAAMjB,MAAQ,QAjBL,cAmBVC,EAAWqB,SAAU,SAACL,EAAOM,GAC5BN,EAAMH,OAAS,UACfG,EAAMjB,MAAQ,QArBL,cAuBVC,EAAWuB,UAAW,SAACP,EAAOM,GAC7BN,EAAMH,OAAS,KACfG,EAAMjB,MAAQ,WAzBL,cA2BVI,EAAciB,WAAY,SAACJ,EAAOC,GACjCD,EAAMN,MAAQM,EAAMN,MAAME,QACxB,SAAAX,GAAO,OAAIA,EAAQG,KAAOa,EAAOC,cA7B1B,KAmCAH,EAAmBT,EAAWmB,QAA9BV,eACAT,IAAf,QC5DAZ,IAAMgC,SAASC,QAAU,wCAEzB,I,EAAMC,EAAQ,SACRA,GACFlC,IAAMgC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAKVlC,IAAMgC,SAASG,QAAQC,OAAOC,cAAgB,IAI5CC,EAAWxC,YAAiB,gBAAD,uCAAkB,WAAMyC,GAAN,iBAAAxC,EAAA,+EAExBC,IAAMQ,KAAK,gBAAiB+B,GAFJ,uBAEvCpC,EAFuC,EAEvCA,KACR+B,EAAU/B,EAAK+B,OAHgC,kBAIxC/B,GAJwC,gCAM/CC,YAAM,wBANyC,yDAAlB,uDAU3BoC,EAAQ1C,YAAiB,aAAD,uCAAe,WAAMyC,GAAN,iBAAAxC,EAAA,+EAElBC,IAAMQ,KAAK,eAAgB+B,GAFT,uBAEjCpC,EAFiC,EAEjCA,KACR+B,EAAU/B,EAAK+B,OAH0B,kBAIlC/B,GAJkC,gCAMzCC,YAAM,wBANmC,yDAAf,uDAoDfqC,EALQ,CACrBH,WACAI,OAvCa5C,YAAiB,cAAD,sBAAgB,sBAAAC,EAAA,+EAErCC,IAAMQ,KAAK,iBAF0B,OAG3C0B,IAH2C,+CAK3C9B,YAAM,wBALqC,yDAwC7CoC,SCxCaG,EA1BG9B,YAAY,CAC5BC,KAAM,OACNC,aARmB,CACnB6B,KAAM,CAAE9B,KAAM,KAAM+B,MAAO,MAC3BX,MAAO,KACPY,YAAY,GAMZrB,eAAa,mBACVgB,EAAeH,SAASZ,WADd,SACyBJ,EAAOC,GACzCD,EAAMsB,KAAOrB,EAAOC,QAAQoB,KAC5BtB,EAAMY,MAAQX,EAAOC,QAAQU,MAC7BZ,EAAMwB,YAAa,KAJV,cAMVL,EAAeD,MAAMd,WANX,SAMsBJ,EAAOC,GACtCD,EAAMsB,KAAOrB,EAAOC,QAAQoB,KAC5BtB,EAAMY,MAAQX,EAAOC,QAAQU,MAC7BZ,EAAMwB,YAAa,KATV,cAWVL,EAAeC,OAAOhB,WAXZ,SAWuBJ,EAAOC,GACvCD,EAAMsB,KAAO,CAAE9B,KAAM,KAAM+B,MAAO,MAClCvB,EAAMY,MAAQ,KACdZ,EAAMwB,YAAa,KAdV,KAuBf,Q,yBCpBMC,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,GAExCC,SAAUC,GAEZrB,aACAsB,UAAUC,IAGCC,EAAYC,YAAaX,G,uCCpCvB,SAASY,IACtB,OACE,gCACE,cAAC,IAAD,CACEC,GAAG,YACHC,OAAK,EACLC,UAAWC,IAAIC,KACfC,gBAAiBF,IAAIG,WAJvB,qBAQA,cAAC,IAAD,CACEN,GAAG,SACHC,OAAK,EACLC,UAAWC,IAAIC,KACfC,gBAAiBF,IAAIG,WAJvB,uB,2BCSSC,EApBI,kBACjB,gCACE,cAAC,IAAD,CAASP,GAAG,IAAIC,OAAK,EACnBC,UAAWC,IAAIC,KACfC,gBAAiBF,IAAIG,WAFvB,kBAOA,cAAC,IAAD,CACEN,GAAG,YACHC,OAAK,EACLC,UAAWC,IAAIC,KACfC,gBAAiBF,IAAIG,WAJvB,2B,iBCLW,SAASE,IAEtB,OACE,yBAAQN,UAAWC,IAAIM,OAAvB,UACE,cAAC,EAAD,IAEA,cAACV,EAAD,O,uCCASW,GAXE,kBACf,qBAAKR,UAAWC,KAAIQ,UAApB,SACE,qBAAIT,UAAWC,KAAIS,MAAnB,sCAEE,sBAAMC,KAAK,MAAM,aAAW,0GAA5B,kD,6BCDS,SAASC,KACtB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,oBAAO7E,EAAP,KAAa8E,EAAb,KACA,EAA0BD,mBAAS,IAAnC,oBAAO9C,EAAP,KAAcgD,EAAd,KACA,EAAgCF,mBAAS,IAAzC,oBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUnF,EAAoB,EAApBA,KAAMoF,EAAc,EAAdA,MACtC,OAAQpF,GACN,IAAK,OACH,OAAO8E,EAAQM,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,gCACE,yCAEA,uBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAShD,EAAeH,SAAS,CAAExB,OAAM+B,QAAOiD,cAChDF,EAAQ,IACRC,EAAS,IACTE,EAAY,KAOoBnB,UAAWC,KAAIyB,KAAMC,aAAa,MAAhE,UACE,wBAAO3B,UAAWC,KAAI2B,MAAtB,+BAEE,uBAAOC,KAAK,OAAO3F,KAAK,OAAOoF,MAAOpF,EAAM4F,SAAUV,OAGxD,wBAAOpB,UAAWC,KAAI2B,MAAtB,2CAEE,uBACEC,KAAK,QACL3F,KAAK,QACLoF,MAAOrD,EACP6D,SAAUV,OAId,wBAAOpB,UAAWC,KAAI2B,MAAtB,iDAEE,uBACEC,KAAK,WACL3F,KAAK,WACLoF,MAAOJ,EACPY,SAAUV,OAId,wBAAQS,KAAK,SAAb,2BC5DR,IAIeE,GAJI,WACf,OAAO,cAACnB,GAAD,K,oBCEI,SAASoB,KACtB,IAAMnB,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,oBAAO9C,EAAP,KAAcgD,EAAd,KACA,EAAgCF,mBAAS,IAAzC,oBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUnF,EAAoB,EAApBA,KAAMoF,EAAc,EAAdA,MACtC,OAAQpF,GACN,IAAK,QACH,OAAO+E,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAWN,OACE,gCACE,wCAEA,uBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAShD,EAAeD,MAAM,CAAEK,QAAOiD,cACvCD,EAAS,IACTE,EAAY,KAOoBnB,UAAWC,KAAIyB,KAAMC,aAAa,MAAhE,UACE,wBAAO3B,UAAWC,KAAI2B,MAAtB,2CAEE,uBACEC,KAAK,QACL3F,KAAK,QACLoF,MAAOrD,EACP6D,SAAUV,OAId,wBAAOpB,UAAWC,KAAI2B,MAAtB,iDAEE,uBACEC,KAAK,WACL3F,KAAK,WACLoF,MAAOJ,EACPY,SAAUV,OAId,wBAAQS,KAAK,SAAb,yBCnDR,IAIeG,GAJG,WACd,OAAO,cAAC,GAAD,K,4DCqBIC,GAnBS,SAAC,GAAgB,IAAdtG,EAAa,EAAbA,QAErBkF,EAAWC,cAKjB,OACI,qBAAId,UAAWC,KAAIiC,YAAnB,UACI,sBAAMlC,UAAWC,KAAI/D,KAArB,SAA4BP,EAAQO,OACpC,sBAAM8D,UAAWC,KAAI5D,OAArB,SAA8BV,EAAQU,SACtC,wBAAQwF,KAAK,SAASM,QAAS,kBARnBrG,EAQoCH,EAAQG,QAP5D+E,EAAShF,EAAcC,IADR,IAACA,GAQZ,wBCEOsG,GAZK,SAAC,GAAkB,IAAhB7C,EAAe,EAAfA,SACrB,OACI,oBAAIS,UAAWC,KAAIoC,YAAnB,SACG9C,EAAS+C,KAAI,SAAA3G,GAAO,OACnB,cAAC,GAAD,CAAiBA,QAASA,GAAcA,EAAQG,U,oBCa3CyG,GAlBA,WACX,IAAM1B,EAAWC,cAMjB,OACI,sBAAKd,UAAWC,KAAI3D,OAApB,UACI,uBAAOkG,QAAQ,SAAf,mCACA,uBAAOX,KAAK,OAAO3F,KAAK,SAASJ,GAAG,SAASkE,UAAWC,KAAIwC,YAAaX,SAR5D,SAAAN,GACrB,IAAMkB,EAAalB,EAAEH,OAAOC,MAAMqB,cAClC9B,EAASpE,EAAeiG,W,6BCPfE,GAAc,SAAAlG,GAAK,OAAIA,EAAM6C,SAASnD,OAEtCyG,GAAY,SAAAnG,GAAK,OAAIA,EAAM6C,SAASjD,QAEpCwG,GAAsBC,aACjC,CAACH,GAAaC,KACd,SAACtD,EAAUjD,GACT,OAAOiD,EAASjD,QAAO,SAAAX,GAAO,OAC5BA,EAAQO,KAAKyG,cAAcK,SAAS1G,SC8C3B2G,GAjDK,WAClB,IAAM1D,EAAW2D,YAAYN,IACvB/B,EAAWC,cAmBjB,OAAO,uBAAMS,SAjBI,SAAAC,GACfA,EAAEC,iBACF,IAAMvF,EAAOsF,EAAEH,OAAO8B,SAASjH,KAAKoF,MAC9BjF,EAASmF,EAAEH,OAAO8B,SAAS9G,OAAOiF,MAKxC,GAJwB/B,EAAS6D,MAC/B,SAAAzH,GAAO,OAAIA,EAAQO,KAAKyG,gBAAkBzG,EAAKyG,iBAI/C,OAAOnH,IAAMC,MAAN,UAAeS,EAAf,+BAET2E,EAASnF,EAAW,CAAEQ,OAAMG,YAE5BmF,EAAEH,OAAO8B,SAASjH,KAAKoF,MAAQ,GAC/BE,EAAEH,OAAO8B,SAAS9G,OAAOiF,MAAQ,IAGFtB,UAAWC,KAAIoD,YAAzC,UACL,uBAAOb,QAAQ,OAAf,kBACA,uBACEX,KAAK,OACL3F,KAAK,OACLJ,GAAG,OACHkE,UAAWC,KAAIqD,UACfC,QAAQ,yHACR7C,MAAM,kcACL8C,UAAQ,IAEX,uBAAOhB,QAAQ,SAAf,oBACA,uBACCX,KAAK,MACL3F,KAAK,SACLJ,GAAG,SACHkE,UAAWC,KAAIqD,UACfC,QAAQ,yFACR7C,MAAM,giBACN8C,UAAQ,IAET,wBAAQ3B,KAAK,SAAb,6BCtBW4B,GAnBM,WACjB,IAAMnH,EAAS4G,YAAYL,IACrBtD,EAAW2D,YAAYN,IAC7Bc,QAAQC,IAAI,WAAYpE,GACxB,IAAMqE,EAAmBV,YAAYJ,IACrC,OACI,qCACI,2CACA,cAAC,GAAD,IAEA,oBAAI9C,UAAWC,KAAIS,MAAnB,sBACA,cAAC,GAAD,KACEpE,GAAU,cAAC,GAAD,CAAaiD,SAAUA,IAClCjD,GAAU,cAAC,GAAD,CAAaiD,SAAUqE,IAClC,cAAC,IAAD,QCRG,SAASC,KACtB,IAAMhD,EAAWC,cAUjB,OARAgD,qBAAU,WACRjD,EAAS5F,OACR,CAAC4F,IAOF,sBAAKb,UAAWC,IAAIQ,UAApB,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOV,OAAK,EAACgE,KAAK,IAAIC,UAAWxD,KACjC,cAAC,IAAD,CAAOuD,KAAK,YAAYC,UAAWjC,KACnC,cAAC,IAAD,CAAOgC,KAAK,SAASC,UAAWhC,KAChC,cAAC,IAAD,CAAO+B,KAAK,YAAYC,UAAWP,WCjC3C,IAYeQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3F,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAa4F,QAAS,KAAMlF,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,cAACkE,GAAD,YAKRiB,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.bbe805d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__3K7Gd\",\"activeLink\":\"AuthNav_activeLink__3eWD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2T24D\",\"activeLink\":\"Navigation_activeLink__1UYet\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SingUpForm_form__xd38i\",\"label\":\"SingUpForm_label__27PnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__3CzVP\",\"label\":\"LoginForm_label__1jffv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__2eB77\",\"number\":\"ContactListItem_number__2nW8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3x3Q2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__1yoFc\",\"title\":\"HomeView_title__2LKUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AuthBar_header__gosE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3x7yO\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const result = await axios.get(\n        'https://611a211bcbf1b30017eb54f5.mockapi.io/api/v1/contacts',\n      );\n      return result.data;\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async contact => {\n    try {\n      const result = await axios.post(\n        'https://611a211bcbf1b30017eb54f5.mockapi.io/api/v1/contacts',\n        contact,\n      );\n      return result.data;\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async id => {\n    try {\n      await axios.delete(\n        `https://611a211bcbf1b30017eb54f5.mockapi.io/api/v1/contacts/${id}`,\n      );\n      return id;\n    } catch (error) {\n      toast.error('Something went wrong');\n    }\n  },\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst ItemsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [\n      {\n        name: 'yfkyfkyfk',\n        number: '2695945949',\n        id: '15',\n      },\n    ],\n    filter: '',\n    status: null,\n    error: null,\n  },\n\n  reducers: {\n    filterContacts: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = null;\n      state.error = null;\n    },\n    [fetchContacts.pending]: (state, _) => {\n      state.status = 'loading';\n    },\n    [fetchContacts.rejected]: (state, _) => {\n      state.status = null;\n      state.error = 'Error';\n    },\n\n    [addContact.fulfilled]: (state, action) => {\n      state.items.push(action.payload);\n      state.status = null;\n      state.error = null;\n    },\n    [addContact.pending]: (state, _) => {\n      state.status = 'loading';\n      state.error = null;\n    },\n    [addContact.rejected]: (state, _) => {\n      state.status = null;\n      state.error = 'Error';\n    },\n    [deleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        contact => contact.id !== action.payload,\n      );\n    },\n  },\n});\n\nexport const { filterContacts } = ItemsSlice.actions;\nexport default ItemsSlice.reducer;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport toast from 'react-hot-toast';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    toast('Something went wrong');\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    toast('Something went wrong');\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    toast('Something went wrong');\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\n// const fetchCurrentUser = createAsyncThunk(\n//   'auth/refresh',\n//   async (_, thunkAPI) => {\n//     const state = thunkAPI.getState();\n//     const persistedToken = state.auth.token;\n\n//     if (persistedToken === null) {\n//       return thunkAPI.rejectWithValue();\n//     }\n\n//     token.set(persistedToken);\n//     try {\n//       const { data } = await axios.get('/users/current');\n//       return data;\n//     } catch (error) {\n//       toast('Something went wrong');\n//     }\n//   },\n// );\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n};\nexport default authOperations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    // [authOperations.fetchCurrentUser.fulfilled](state, action) {\n    //   state.user = action.payload;\n    //   state.isLoggedIn = true;\n    // },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from '../contacts/contacts-slice';\nimport authReducer from '../auth/auth-slice';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    // auth: authReducer,\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nexport const persistor = persistStore(store);\n","import { NavLink } from 'react-router-dom';\r\nimport css from './AuthNav.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={css.link}\r\n        activeClassName={css.activeLink}\r\n      >\r\n        Sign up\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={css.link}\r\n        activeClassName={css.activeLink}\r\n      >\r\n        Log in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { NavLink } from 'react-router-dom';\r\nimport css from './Navigation.module.css'\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact\r\n      className={css.link}\r\n      activeClassName={css.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      className={css.link}\r\n      activeClassName={css.activeLink}\r\n    >\r\n      Contactcs\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;","import { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport AuthNav from \"../AuthNav/AuthNav\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport Navigation from \"../Navigation/Navigation\"\r\nimport css from \"./AuthBar.module.css\";\r\n\r\nexport default function AppBar() {\r\n// const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={css.header}>\r\n      <Navigation />\r\n      {/* {isLoggedIn ? <UserMenu /> : <AuthNav />} */}\r\n      <AuthNav />\r\n    </header>\r\n  );\r\n}","import css from './HomeView.module.css';\r\n\r\nconst HomeView = () => (\r\n  <div className={css.container}>\r\n    <h1 className={css.title}>\r\n      Wellcome to PHONEBOOK!!!!\r\n      <span role=\"img\" aria-label=\"Иконка приветствия\">\r\n        💁‍♀️\r\n      </span>\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport css from './SingUpForm.module.css';\r\n\r\nexport default function SignUpForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>SIGN UP</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={css.form} autoComplete=\"off\">\r\n        <label className={css.label}>\r\n          Имя\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label className={css.label}>\r\n          Почта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={css.label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import SignUpForm from '../../components/SingIUpForm/SingUpForm';\r\n\r\nconst SignUpView = () => {\r\n    return <SignUpForm/>;\r\n};\r\n\r\nexport default SignUpView;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport css from './LoginForm.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>LOG IN</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={css.form} autoComplete=\"off\">\r\n        <label className={css.label}>\r\n          Почта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={css.label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import LoginForm from \"../../components/LoginForm/LoginForm\";\r\n\r\nconst LoginView = () => {\r\n    return <LoginForm />;\r\n};\r\n\r\nexport default LoginView;","import PropTypes from 'prop-types';\r\nimport css from './ContactListItem.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ContactListItem = ({ contact}) => {\r\n  \r\nconst dispatch = useDispatch();\r\nconst deleteItem = (id) => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\nreturn (\r\n    <li className={css.contactItem}>\r\n        <span className={css.name}>{contact.name}</span>\r\n        <span className={css.number}>{contact.number}</span>\r\n        <button type=\"button\" onClick={() => deleteItem(contact.id)}>Delete</button>\r\n    </li>);\r\n}\r\n    \r\nContactListItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport css from './ContactList.module.css';\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n      <ul className={css.contactList}>\r\n        {contacts.map(contact =>\r\n          <ContactListItem contact={contact} key={contact.id}/>)}\r\n      </ul>);\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport css from './Filter.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/contacts/contacts-slice';\r\n\r\nconst Filter = () => {\r\n    const dispatch = useDispatch();\r\n    const handleFilter = e => {\r\n    const filterName = e.target.value.toLowerCase();\r\n    dispatch(filterContacts(filterName));\r\n  };\r\n\r\n    return (\r\n        <div className={css.filter}>\r\n            <label htmlFor=\"filter\">Find contacts by name</label>\r\n            <input type=\"text\" name=\"filter\" id=\"filter\" className={css.filterInput} onChange={handleFilter} />\r\n        </div>);\r\n};\r\n\r\nFilter.propTypes = {\r\n    filterByName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getSelectedContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  },\n);\n","import PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport toast from 'react-hot-toast';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const name = e.target.elements.name.value;\r\n    const number = e.target.elements.number.value;\r\n    const existingContact = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (existingContact) {\r\n      return toast.error(`${name} is already in contacts!!!`);\r\n    }\r\n    dispatch(addContact({ name, number }));\r\n\r\n    e.target.elements.name.value = '';\r\n    e.target.elements.number.value = '';\r\n  };\r\n\r\n  return <form onSubmit={onSubmit} className={css.contactForm}>\r\n    <label htmlFor=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      className={css.formInput}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n      />\r\n    <label htmlFor=\"number\">Number</label>\r\n    <input\r\n     type=\"tel\"\r\n     name=\"number\"\r\n     id=\"number\"\r\n     className={css.formInput}\r\n     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n     required\r\n    />\r\n    <button type=\"submit\">Add contact</button>\r\n    </form>\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n};\r\nexport default ContactForm;","import css from './ContactsView.module.css';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilter, getContacts, getSelectedContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactsView = () => {\r\n    const filter = useSelector(getFilter);\r\n    const contacts = useSelector(getContacts);\r\n    console.log('contacts', contacts);\r\n    const selectedContacts = useSelector(getSelectedContacts);\r\n    return (\r\n        <>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm/>\r\n\r\n            <h2 className={css.title}>Contacts</h2>\r\n            <Filter/>\r\n            {!filter && <ContactList contacts={contacts} />}\r\n            {filter && <ContactList contacts={selectedContacts} />}\r\n            <Toaster />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ContactsView;","import { Switch, Route } from 'react-router-dom';\n// import toast, { Toaster } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\n\nimport AuthBar from './components/AuthBar/AuthBar';\nimport css from './App.module.css';\nimport { useEffect } from 'react';\nimport { fetchContacts } from './redux/contacts/contacts-operations';\nimport authOperations from './redux/auth/auth-operations';\nimport HomeView from './views/HomeView/HomeView';\nimport SignUpView from './views/SignUpView/SignUpView';\nimport LoginView from './views/LoginView/LoginView';\nimport ContactsView from './views/ContactsView/ContactsView';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   dispatch(authOperations.fetchCurrentUser());\n  // }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <AuthBar />\n\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/register\" component={SignUpView} />\n        <Route path=\"/login\" component={LoginView} />\n        <Route path=\"/contacts\" component={ContactsView} />\n      </Switch>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}